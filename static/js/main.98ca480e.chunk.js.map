{"version":3,"sources":["components/card/card.component.js","components/cardlist/cardlist.component.js","components/searchbox/searchbox.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","Cardlist","monsters","map","SearchBox","placeholder","handlechange","type","onChange","App","state","search_text","fetch","then","res","json","data","setState","catch","error","console","log","this","filter_monsters","filter","a","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAWaA,EAAK,SAACC,GAAD,OACd,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,WCTVC,G,MAAU,SAAAP,GAAK,OACxB,qBAAKC,UAAU,WAAf,SACCD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCHxCK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCuCjEG,E,kDApCb,aAAc,IAAD,8BACX,gBAEKC,MAAM,CACTR,SAAS,GACTS,YAAY,IALH,E,qDASb,WAAoB,IAAD,OAEjBC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAAQF,MAAK,SAAAG,GAAI,OAAE,EAAKC,SAAS,CAACf,SAASc,OACzDE,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAI,8D,oBAK5B,WAAS,IAAD,SACyBC,KAAKZ,MAA7BR,EADD,EACCA,SAASS,EADV,EACUA,YACVY,EAAgBrB,EAASsB,QAAO,SAAAC,GAAC,OACrCA,EAAEzB,KAAK0B,cAAcC,SAAShB,EAAYe,kBAC5C,OACE,sBAAK/B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACAU,YAAY,kBACZC,aAAc,SAAAsB,GAAC,OAAE,EAAKX,SAAS,CAACN,YAAYiB,EAAEC,OAAOC,WAErD,cAAC,EAAD,CAAU5B,SAAUqB,W,GA/BRQ,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.98ca480e.chunk.js","sourcesContent":["import React from 'react';\r\n// import openMap from 'react-native-open-maps';\r\n// import { createOpenLink } from 'react-native-open-maps';\r\nimport \"./card.styles.css\";\r\n// import {Button} from \"react\";\r\n\r\n// const facebookHQ = { latitude: 37.4847, longitude: 122.1477 };\r\n// const openFacebookHQ = createOpenLink(facebookHQ);\r\n\r\n\r\n\r\nexport const Card=(props)=>(\r\n    <div className=\"card-container\">\r\n    <img alt=\"monsters\" src={`https://robohash.org/${props.monster.id}?set=set3&size=180x180`}/>\r\n    <h2>{props.monster.name}</h2>\r\n    </div>\r\n);\r\n\r\n// <a href={\"mailto:\" + props.monster.email}>{props.monster.email}</a>\r\n// <p>lat {props.monster.address.geo.lat},<br /> long {props.monster.address.geo.lng}</p>\r\n// <Button color={'#bdc3c7'} onPress={openFacebookHQ} title=\"Go to Facebook HQ ðŸ•‹\" />","import React from \"react\";\r\nimport {Card} from '../card/card.component'\r\nimport \"./cardlist.styles.css\";\r\n\r\n\r\nexport const Cardlist= props => (\r\n    <div className='cardlist'>\r\n    {props.monsters.map(monster=>(<Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n);","import React from \"react\";\r\n\r\nimport \"./searchbox.styles.css\";\r\n\r\nexport const SearchBox = ({placeholder,handlechange}) => (\r\n    <input className=\"search\" type='search' placeholder={placeholder} onChange={handlechange}/>\r\n);\r\n ","import React from 'react';\nimport './App.css';\n// import Generator from \"doctor-who\";\nimport {Cardlist} from \"./components/cardlist/cardlist.component\";\nimport {SearchBox} from \"./components/searchbox/searchbox.component\";\n\nclass App extends React.Component{\n\n  constructor(){\n    super();\n\n    this.state={\n      monsters:[],\n      search_text:''\n    }\n  }\n\n  componentDidMount(){\n    // this.get_names();\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res=>res.json()).then(data=>this.setState({monsters:data}))\n    .catch(error=>console.log('URL might be wrong or there is no internet connection'))\n  }\n\n\n\n  render(){\n    const {monsters,search_text} = this.state;\n    const filter_monsters=monsters.filter(a=>\n      a.name.toLowerCase().includes(search_text.toLowerCase()))\n    return (\n      <div className=\"App\">\n      <h1>Monster Universe</h1>\n      <SearchBox\n      placeholder=\"Search Monsters\"\n      handlechange={e=>this.setState({search_text:e.target.value})}\n      />\n      <Cardlist monsters={filter_monsters}/>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n \n\n          // onChange={e =>\n      //   {\n      //     // console.log(e.target.value);\n      //     this.setState({search_text:e.target.value},()=>{\n      //       console.log(this.state.search_text)})\n          \n      //   }}/>\n\n\n// <Cardlist name=\"Yihua\"><h1>Yihua</h1></Cardlist>\n  \n// <Cardlist>\n//       {\n//         // this.state.Companions.map(i=> <div><h1 key={i.id}>{i.name}</h1><h2>Companion to {this.num_suffix(i.id)} Doctor</h2></div>)\n//         this.state.Companions.map(i=> <h1 key={i.id}>{i.name}</h1>)\n//       }\n//       </Cardlist>\n      \n\n// get_names(){\n  //   // const Generator = require('doctor-who');\n  //   const dw = new Generator();\n  //   console.log(dw.get(10));\n  // }\n\n  \n//   num_suffix(i) {\n//     var j = i % 10,\n//         k = i % 100;\n//     if (j === 1 && k !== 11) {\n//         return i + \"st\";\n//     }\n//     if (j === 2 && k !== 12) {\n//         return i + \"nd\";\n//     }\n//     if (j === 3 && k !== 13) {\n//         return i + \"rd\";\n//     }\n//     return i + \"th\";\n// }\n\n\n\n\n// {\n  //       id:1,\n  //       name:\"Rose Taylor\",\n  //       doctor:1,\n  //       doctor_full:9\n  //     },\n  //     {\n  //       id:2,\n  //       name:\"Mickie Smith\",\n  //       doctor:9\n  //     },\n  //     {\n  //       id:3,\n  //       name:\"Martha Jones\",\n  //       doctor:10\n  //     },\n  //     {\n  //       id:4,\n  //       name:\"Donna Noble\",\n  //       doctor:10\n  //     },\n  //     {\n  //       id:5,\n  //       name:\"Amelia Pond\",\n  //       doctor:11\n  //     },\n  //     {\n  //       id:6,\n  //       name:\"Rory Williams\",\n  //       doctor:11\n  //     },\n  //     {\n  //       id:7,\n  //       name:\"Clara Oswald\",\n  //       doctor:12\n  //     }            \n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}